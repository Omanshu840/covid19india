{"version":3,"sources":["data_maps/stateMap.js","services/service.js","components/Header.js","components/Chart.js","components/Charts.js","App.js","index.js"],"names":["stateMap","getData","a","axios","get","response","data","columns","Header","className","map","item","span","style","textAlign","CaretUpOutlined","CaretDownOutlined","Chart","field","variant","state","LineChart","width","height","margin","top","right","left","bottom","XAxis","dataKey","YAxis","Tooltip","Legend","Line","type","stroke","fields","Charts","useState","chartData","setChartData","setSpan","setVariant","setState","useEffect","parseChartData","tempChartData","i","key","date","Date","entry","id","getDate","getMonth","getFullYear","push","Group","defaultValue","buttonStyle","onChange","e","target","value","Button","length","Option","Object","keys","filter","App","setData","latestDate","setLatestDate","then","res","parseData","tempData","total_confirmed","total_recovered","total_deceased","prev_date","rows","time_key","report_time","substr","entry_data","time","toLocaleDateString","confirmed","cured","death","recovered","active","deceased","total_active","tableData","confirmed_delta","active_delta","recovered_delta","deceased_delta","marginTop","xs","lg","paddingRight","dataSource","pagination","scroll","x","Column","title","dataIndex","fixed","render","record","sorter","b","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25bf6fbc.chunk.js","sourcesContent":["export const stateMap = {\n    \"wb\": \"West Bengal\",\n    \"ut\": \"Uttarakhand\",\n    \"up\": \"Uttar Pradesh\",\n    \"tr\": \"Tripura\",\n    \"tn\": \"Tamil Nadu\",\n    \"tg\": \"Telangana\",\n    \"sk\": \"Sikkim\",\n    \"rj\": \"Rajasthan\",\n    \"py\": \"Puducherry\",\n    \"pb\": \"Punjab\",\n    \"or\": \"Odisha\",\n    \"nl\": \"Nagaland\",\n    \"mz\": \"Mizoram\",\n    \"mp\": \"Madhya Pradesh\",\n    \"mn\": \"Manipur\",\n    \"ml\": \"Meghalaya\",\n    \"mh\": \"Maharashtra\",\n    \"ld\": \"Lakshadweep\",\n    \"la\": \"Ladakh\",\n    \"kl\": \"Kerala\",\n    \"ka\": \"Karnataka\",\n    \"jk\": \"Jammu and Kashmir\",\n    \"jh\": \"Jharkhand\",\n    \"hr\": \"Haryana\",\n    \"hp\": \"Himachal Pradesh\",\n    \"gj\": \"Gujarat\",\n    \"ga\": \"Goa\",\n    \"dn_dd\": \"Dadra and Nagar Haveli and Daman and Diu\",\n    \"dl\": \"Delhi\",\n    \"ct\": \"Chhattisgarh\",\n    \"ch\": \"Chandigarh\",\n    \"br\": \"Bihar\",\n    \"as\": \"Assam\",\n    \"ar\": \"Arunachal Pradesh\",\n    \"ap\": \"Andhra Pradesh\",\n    \"an\": \"Andaman and Nicobar Islands\"\n}","import axios from \"axios\"\n\nexport const getLatestData = async () => {\n    try {\n        const response = await axios.get('https://api.rootnet.in/covid19-in/stats/latest')\n        return response.data\n    }\n    catch (e) {\n        return e.response.data\n    }\n}\n\nexport const getData = async () => {\n    try {\n        const response = await axios.get('https://raw.githubusercontent.com/datameet/covid19/master/data/mohfw.json')\n        return response.data\n    }\n    catch (e) {\n        return e.response.data\n    }\n}","import { CaretDownOutlined, CaretUpOutlined } from '@ant-design/icons'\nimport { Col, Row } from 'antd'\nimport React from 'react'\n\nconst columns = [\"confirmed\", \"active\", \"recovered\", \"deceased\"]\n\nconst Header = ({data}) => {\n    return (\n        <Row className=\"summary-section shadow-1\">\n            {columns.map(item => {\n                return (\n                    <Col span={6} style={{textAlign: \"center\"}}>\n                        <div className=\"summary-tile\">\n                            <h4 className=\"column\">{item}</h4>\n                            <h2 className=\"value\">{data[`total_${item}`]}</h2>\n                            <p>\n                                {(data[`${item}_delta`] > 0) \n                                    ? <> <CaretUpOutlined /> {data[`${item}_delta`]} </>\n                                    : (data[`${item}_delta`] < 0)\n                                        ? <> <CaretDownOutlined /> {data[`${item}_delta`]}</>\n                                        : <></>\n                                }\n                            </p>\n                        </div>\n                    </Col>\n                )\n            })}\n        </Row>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend } from 'recharts';\n\nconst Chart = ({data, field, variant, state}) => {\n    return (\n        <div>\n            <LineChart\n                width={500}\n                height={300}\n                data={data}\n                margin={{\n                    top: 5,\n                    right: 30,\n                    left: 20,\n                    bottom: 5,\n                }}\n            >\n                <XAxis dataKey=\"date\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line type=\"monotone\" dataKey={`${field}${variant}${state}`} stroke=\"#82ca9d\" />\n            </LineChart>\n        </div>\n    )\n}\n\nexport default Chart\n","import React, { useEffect, useState } from 'react'\nimport Chart from './Chart';\nimport { Radio, Select } from 'antd';\nimport { stateMap } from '../data_maps/stateMap';\n\nconst fields = [\"confirmed\", \"active\", \"recovered\", \"deceased\"]\n\nconst Charts = ({data}) => {\n\n    const [chartData, setChartData] = useState(null)\n    const [span, setSpan] = useState(30)\n    const [variant, setVariant] = useState(\"\")\n    const [state, setState] = useState(\"\")\n\n    useEffect(() => {\n        parseChartData()\n    }, [])\n\n    const parseChartData = () => {\n        var tempChartData = []\n        var i = 0;\n\n        for(var key in data) {\n            var date = new Date(key)\n            var date_key = `${date.getDate()}-${date.getMonth()+1}-${date.getFullYear()}`\n\n            var entry = {\n                id: i,\n                date: date_key\n            }\n\n            for(var field of fields) {\n                entry[field] = data[key]['summary'][`total_${field}`]\n                entry[`${field}_delta`] = data[key]['summary'][`${field}_delta`]\n            }\n\n            for(var state in stateMap) {\n                for(field of fields) {\n                    if(data[key][state]) {\n                        entry[`${field}_${state}`] = data[key][state][`${field}`]\n                        entry[`${field}_delta_${state}`] = data[key][state][`${field}_delta`]\n                    }\n                }\n            }\n\n            tempChartData.push(entry)\n\n            i++;\n        }\n\n        setChartData(tempChartData)\n    }\n\n    if(!chartData) {\n        return <h2>Loading</h2>\n    }\n\n    return (\n        <div>\n            <Radio.Group defaultValue={span} buttonStyle=\"solid\" onChange={(e) => setSpan(e.target.value)}>\n                <Radio.Button value={30}>30 days</Radio.Button>\n                <Radio.Button value={90}>90 days</Radio.Button>\n                <Radio.Button value={chartData.length}>Beginning</Radio.Button>\n            </Radio.Group>\n\n            <br/>\n            <br/>\n\n            <Radio.Group defaultValue={variant} buttonStyle=\"solid\" onChange={(e) => setVariant(e.target.value)}>\n                <Radio.Button value=\"\">Cumulative</Radio.Button>\n                <Radio.Button value=\"_delta\">Daily</Radio.Button>\n            </Radio.Group>\n\n            <br/>\n            <br/>\n\n            <Select defaultValue=\"\" style={{ width: 120 }} onChange={(value) => setState(value)}>\n                <Select.Option value=\"\">India</Select.Option>\n                {Object.keys(stateMap).map(item =>\n                    <Select.Option value={`_${item}`}>{stateMap[item]}</Select.Option>\n                )}\n            </Select>\n\n            {fields.map((item) => {\n                return (\n                    <Chart \n                        data={chartData.filter((item) => {\n                            return (\n                                item.id > (chartData.length - span)\n                            )\n                        })}\n                        field={item}\n                        variant={variant}\n                        state={state}\n                    />\n                )\n            })}\n        </div>\n    )\n}\n\nexport default Charts\n","import React, { useEffect, useState } from 'react'\nimport { stateMap } from './data_maps/stateMap'\nimport { getData } from './services/service'\nimport { Table , Row, Col} from 'antd';\nimport {CaretDownOutlined, CaretUpOutlined} from '@ant-design/icons'\nimport Header from './components/Header';\nimport Charts from './components/Charts';\n\n\nconst App = () => {\n\n\tconst [data, setData] = useState(null)\n\tconst [latestDate, setLatestDate] = useState(\"\")\n\n\tuseEffect(() => {\n\t\tgetData()\n\t\t.then(res => {\n\t\t\tparseData(res)\n\t\t})\n\t}, [])\n\n\tconst parseData = (res) => {\n\t\tvar tempData = {}\n\t\tvar total_confirmed = 0\n\t\tvar total_recovered = 0\n\t\tvar total_deceased = 0\n\t\tvar prev_date = null\n\t\t\n\t\tfor(var i = 0; i<res.rows.length; i++) {\n\t\t\tvar time_key = new Date(`${res.rows[i].value.report_time.substr(0, 10)}T00:00:00.00+05:30`)\n\t\t\tvar entry = {}\n\n\t\t\twhile(i<res.rows.length) {\n\t\t\t\tvar entry_data = res.rows[i].value\n\t\t\t\tvar time = new Date(`${entry_data.report_time.substr(0, 10)}T00:00:00.00+05:30`)\n\t\t\t\t\n\t\t\t\tvar date1 = time_key.toLocaleDateString()\n\t\t\t\tvar date2 = time.toLocaleDateString()\n\n\t\t\t\tif(date1 !== date2) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\ttotal_confirmed += entry_data.confirmed\n\t\t\t\ttotal_recovered += entry_data.cured\n\t\t\t\ttotal_deceased += entry_data.death\n\n\t\t\t\tentry[entry_data.state] = {\n\t\t\t\t\treport_time: entry_data.report_time,\n\t\t\t\t\tconfirmed: entry_data.confirmed,\n\t\t\t\t\trecovered: entry_data.cured,\n\t\t\t\t\tactive: (entry_data.confirmed - entry_data.cured - entry_data.death),\n\t\t\t\t\tdeceased: entry_data.death,\n\t\t\t\t}\n\n\t\t\t\tif(prev_date && tempData[prev_date][entry_data.state]) {\n\t\t\t\t\tentry[entry_data.state]['confirmed_delta'] = entry_data.confirmed - tempData[prev_date][entry_data.state]['confirmed']\n\t\t\t\t\tentry[entry_data.state]['recovered_delta'] = entry_data.cured - tempData[prev_date][entry_data.state]['recovered']\n\t\t\t\t\tentry[entry_data.state]['deceased_delta'] = entry_data.death - tempData[prev_date][entry_data.state]['deceased']\n\t\t\t\t\tentry[entry_data.state]['active_delta'] = entry_data.confirmed - entry_data.cured - entry_data.death - tempData[prev_date][entry_data.state]['active']\n\t\t\t\t}\n\n\t\t\t\ti++\n\t\t\t}\n\n\t\t\ti--\n\n\t\t\ttempData[`${time_key}`] = entry\n\n\t\t\ttempData[`${time_key}`]['summary'] = {\n\t\t\t\ttotal_confirmed: total_confirmed,\n\t\t\t\ttotal_active: total_confirmed - total_recovered - total_deceased,\n\t\t\t\ttotal_recovered: total_recovered,\n\t\t\t\ttotal_deceased: total_deceased,\n\t\t\t}\n\n\t\t\tif(prev_date) {\n\t\t\t\ttempData[`${time_key}`]['summary']['confirmed_delta'] = total_confirmed - tempData[prev_date]['summary'].total_confirmed\n\t\t\t\ttempData[`${time_key}`]['summary']['active_delta'] = total_confirmed - total_recovered - total_deceased - tempData[prev_date]['summary'].total_active\n\t\t\t\ttempData[`${time_key}`]['summary']['recovered_delta'] = total_recovered - tempData[prev_date]['summary'].total_recovered\n\t\t\t\ttempData[`${time_key}`]['summary']['deceased_delta'] = total_deceased - tempData[prev_date]['summary'].total_deceased\n\t\t\t}\n\n\t\t\ttotal_confirmed = 0\n\t\t\ttotal_deceased = 0\n\t\t\ttotal_recovered = 0\n\n\t\t\tprev_date = `${time_key}`\n\t\t\tsetLatestDate(`${time_key}`)\n\t\t}\n\t\t\n\t\tsetData(tempData)\n\t}\n\n\t\n\tif(!data) {\n\t\treturn (\n\t\t\t<h1>Loading</h1>\n\t\t)\n\t}\n\n\tconst tableData = []\n\n\tfor(var key in data[latestDate]) {\n\t\ttableData.push({\n\t\t\tstate: stateMap[key],\n\t\t\tconfirmed: data[latestDate][key]['confirmed'],\n\t\t\tactive: data[latestDate][key]['active'],\n\t\t\trecovered: data[latestDate][key]['recovered'],\n\t\t\tdeceased: data[latestDate][key]['deceased'],\n\t\t\tconfirmed_delta: data[latestDate][key]['confirmed_delta'],\n\t\t\tactive_delta: data[latestDate][key]['active_delta'],\n\t\t\trecovered_delta: data[latestDate][key]['recovered_delta'],\n\t\t\tdeceased_delta: data[latestDate][key]['deceased_delta']\n\t\t})\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{/* <h2>{latestDate}</h2> */}\n\n\t\t\t<div className=\"container\" style={{textAlign: 'center', marginTop: '5vh'}}>\n\t\t\t\t<h1>Covid 19 India</h1>\n\t\t\t</div>\n\n\t\t\t<div className=\"container\">\n\t\t\t\t<Header data = {data[latestDate]['summary']}/>\n\t\t\t</div>\n\n\t\t\t<div className=\"container\">\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={24} lg={12} style={{paddingRight: \"1%\"}}>\n\t\t\t\t\t\t<Table dataSource={tableData} pagination={false} scroll={{ x: 600 }} className=\"shadow-1\">\n\t\t\t\t\t\t\t<Table.Column title=\"State\" dataIndex=\"state\" key=\"state\" fixed=\"left\"/>\n\t\t\t\t\t\t\t<Table.Column\n\t\t\t\t\t\t\t\ttitle=\"Confirmed\"\n\t\t\t\t\t\t\t\tkey=\"confirmed\"\n\t\t\t\t\t\t\t\trender = {(record) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t{record.confirmed} <br/>\n\t\t\t\t\t\t\t\t\t\t\t{(record.confirmed_delta > 0)\n\t\t\t\t\t\t\t\t\t\t\t\t? <> <CaretUpOutlined /> {record.confirmed_delta} </>\n\t\t\t\t\t\t\t\t\t\t\t\t: <></>\n\t\t\t\t\t\t\t\t\t\t\t}\t\t\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tsorter ={(a, b) => a.confirmed - b.confirmed}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Table.Column\n\t\t\t\t\t\t\t\ttitle=\"Active\"\n\t\t\t\t\t\t\t\tkey=\"active\"\n\t\t\t\t\t\t\t\trender = {(record) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t{record.active} <br/>\n\t\t\t\t\t\t\t\t\t\t\t{(record.active_delta > 0) \n\t\t\t\t\t\t\t\t\t\t\t\t? <> <CaretUpOutlined /> {record.active_delta} </>\n\t\t\t\t\t\t\t\t\t\t\t\t: (record.active_delta < 0)\n\t\t\t\t\t\t\t\t\t\t\t\t\t? <> <CaretDownOutlined /> {record.active_delta}</>\n\t\t\t\t\t\t\t\t\t\t\t\t\t: <></>\n\t\t\t\t\t\t\t\t\t\t\t}\t\t\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tsorter ={(a, b) => a.active - b.active}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Table.Column\n\t\t\t\t\t\t\t\ttitle=\"Recovered\"\n\t\t\t\t\t\t\t\tkey=\"recovered\"\n\t\t\t\t\t\t\t\trender = {(record) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t{record.recovered} <br/>\n\t\t\t\t\t\t\t\t\t\t\t{(record.recovered_delta > 0)\n\t\t\t\t\t\t\t\t\t\t\t\t? <> <CaretUpOutlined /> {record.recovered_delta} </>\n\t\t\t\t\t\t\t\t\t\t\t\t: <></>\n\t\t\t\t\t\t\t\t\t\t\t}\t\t\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tsorter ={(a, b) => a.recovered - b.recovered}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Table.Column\n\t\t\t\t\t\t\t\ttitle=\"Deceased\"\n\t\t\t\t\t\t\t\tkey=\"deceased\"\n\t\t\t\t\t\t\t\trender = {(record) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t{record.deceased} <br/>\n\t\t\t\t\t\t\t\t\t\t\t{(record.deceased_delta > 0)\n\t\t\t\t\t\t\t\t\t\t\t\t? <> <CaretUpOutlined /> {record.deceased_delta} </>\n\t\t\t\t\t\t\t\t\t\t\t\t: <></>\n\t\t\t\t\t\t\t\t\t\t\t}\t\t\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tsorter ={(a, b) => a.deceased - b.deceased}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t</Col>\n\t\t\t\t\t\n\t\t\t\t\t<Col xs={24} lg={12} className=\"container-1\">\n\t\t\t\t\t\t<Charts data={data}/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</div>\n\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"antd/dist/antd.css\";\nimport \"./static/style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}